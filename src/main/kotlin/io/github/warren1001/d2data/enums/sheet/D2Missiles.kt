package io.github.warren1001.d2data.enums.sheet

import io.github.warren1001.d2data.properSeparator

enum class D2Missiles(header: String, vararg headerHistory: String): D2Header {
	
	MISSILE("Missile"),
	ID("*ID"),
	P_CLT_DO_FUNC("pCltDoFunc"),
	P_CLT_HIT_FUNC("pCltHitFunc"),
	P_SRV_DO_FUNC("pSrvDoFunc"),
	P_SRV_HIT_FUNC("pSrvHitFunc"),
	P_SRV_DMG_FUNC("pSrvDmgFunc"),
	SRV_CALC_1("SrvCalc1"),
	SRV_CALC_1_DESC("*srv calc 1 desc"),
	PARAM_1("Param1"),
	PARAM_1_DESC("*param1 desc"),
	PARAM_2("Param2"),
	PARAM_2_DESC("*param2 desc"),
	PARAM_3("Param3"),
	PARAM_3_DESC("*param3 desc"),
	PARAM_4("Param4"),
	PARAM_4_DESC("*param4 desc"),
	PARAM_5("Param5"),
	PARAM_5_DESC("*param5 desc"),
	CLT_CALC_1("CltCalc1"),
	CLIENT_CALC_1_DESC("*client calc 1 desc"),
	CLT_PARAM_1("CltParam1"),
	CLIENT_PARAM_1_DESC("*client param1 desc"),
	CLT_PARAM_2("CltParam2"),
	CLIENT_PARAM_2_DESC("*client param2 desc"),
	CLT_PARAM_3("CltParam3"),
	CLIENT_PARAM_3_DESC("*client param3 desc"),
	CLT_PARAM_4("CltParam4"),
	CLIENT_PARAM_4_DESC("*client param4 desc"),
	CLT_PARAM_5("CltParam5"),
	CLIENT_PARAM_5_DESC("*client param5 desc"),
	S_HIT_CALC_1("SHitCalc1"),
	SERVER_HIT_CALC_1_DESC("*server hit calc 1 desc"),
	S_HIT_PAR_1("sHitPar1"),
	SERVER_HIT_PARAM_1_DESC("*server hit param1 desc"),
	S_HIT_PAR_2("sHitPar2"),
	SERVER_HIT_PARAM_2_DESC("*server hit param2 desc"),
	S_HIT_PAR_3("sHitPar3"),
	SERVER_HIT_PARAM_3_DESC("*server hit param3 desc"),
	C_HIT_CALC_1("CHitCalc1"),
	CLIENT_HIT_CALC_1_DESC("*client hit calc1 desc"),
	C_HIT_PAR_1("cHitPar1"),
	CLIENT_HIT_PARAM_1_DESC("*client hit param1 desc"),
	C_HIT_PAR_2("cHitPar2"),
	CLIENT_HIT_PARAM_2_DESC("*client hit param2 desc"),
	C_HIT_PAR_3("cHitPar3"),
	CLIENT_HIT_PARAM_3_DESC("*client hit param3 desc"),
	DMG_CALC_1("DmgCalc1"),
	DAMAGE_CALC_1("*damage calc 1"),
	D_PARAM_1("dParam1"),
	DAMAGE_PARAM_1_DESC("*damage param1 desc"),
	D_PARAM_2("dParam2"),
	DAMAGE_PARAM_2_DESC("*damage param2 desc"),
	VEL("Vel"),
	MAX_VEL("MaxVel"),
	VEL_LEV("VelLev"),
	ACCEL("Accel"),
	RANGE("Range"),
	LEV_RANGE("LevRange"),
	LIGHT("Light"),
	FLICKER("Flicker"),
	RED("Red"),
	GREEN("Green"),
	BLUE("Blue"),
	INIT_STEPS("InitSteps"),
	ACTIVATE("Activate"),
	LOOP_ANIM("LoopAnim"),
	CEL_FILE("CelFile"),
	ANIM_RATE("animrate"),
	ANIM_LEN("AnimLen"),
	ANIM_SPEED("AnimSpeed"),
	RAND_START("RandStart"),
	SUB_LOOP("SubLoop"),
	SUB_START("SubStart"),
	SUB_STOP("SubStop"),
	COLLIDE_TYPE("CollideType"),
	COLLIDE_KILL("CollideKill"),
	COLLIDE_FRIEND("CollideFriend"),
	LAST_COLLIDE("LastCollide"),
	COLLISION("Collision"),
	CLIENT_COL("ClientCol"),
	CLIENT_SEND("ClientSend"),
	NEXT_HIT("NextHit"),
	NEXT_DELAY("NextDelay"),
	X_OFFSET("xoffset"),
	Y_OFFSET("yoffset"),
	Z_OFFSET("zoffset"),
	SIZE("Size"),
	SRC_TOWN("SrcTown"),
	CLT_SRC_TOWN("CltSrcTown"),
	CAN_DESTROY("CanDestroy"),
	TO_HIT("ToHit"),
	ALWAYS_EXPLODE("AlwaysExplode"),
	EXPLOSION("Explosion"),
	TOWN("Town"),
	NO_UNIQUE_MOD("NoUniqueMod"),
	NO_MULTI_SHOT("NoMultiShot"),
	HOLY("Holy"),
	CAN_SLOW("CanSlow"),
	RETURN_FIRE("ReturnFire"),
	GET_HIT("GetHit"),
	SOFT_HIT("SoftHit"),
	KNOCK_BACK("KnockBack"),
	TRANS("Trans"),
	PIERCE("Pierce"),
	MISSILE_SKILL("MissileSkill"),
	SKILL("Skill"),
	RESULT_FLAGS("ResultFlags"),
	HIT_FLAGS("HitFlags"),
	HIT_SHIFT("HitShift"),
	APPLY_MASTERY("ApplyMastery"),
	SRC_DAMAGE("SrcDamage"),
	HALF_2_H_SRC("Half2HSrc"),
	SRC_MISS_DMG("SrcMissDmg"),
	MIN_DAMAGE("MinDamage"),
	MIN_LEV_DAM_1("MinLevDam1"),
	MIN_LEV_DAM_2("MinLevDam2"),
	MIN_LEV_DAM_3("MinLevDam3"),
	MIN_LEV_DAM_4("MinLevDam4"),
	MIN_LEV_DAM_5("MinLevDam5"),
	MAX_DAMAGE("MaxDamage"),
	MAX_LEV_DAM_1("MaxLevDam1"),
	MAX_LEV_DAM_2("MaxLevDam2"),
	MAX_LEV_DAM_3("MaxLevDam3"),
	MAX_LEV_DAM_4("MaxLevDam4"),
	MAX_LEV_DAM_5("MaxLevDam5"),
	DMG_SYM_PER_CALC("DmgSymPerCalc"),
	E_TYPE("EType"),
	E_MIN("EMin"),
	MIN_E_LEV_1("MinELev1"),
	MIN_E_LEV_2("MinELev2"),
	MIN_E_LEV_3("MinELev3"),
	MIN_E_LEV_4("MinELev4"),
	MIN_E_LEV_5("MinELev5"),
	E_MAX("EMax"),
	MAX_E_LEV_1("MaxELev1"),
	MAX_E_LEV_2("MaxELev2"),
	MAX_E_LEV_3("MaxELev3"),
	MAX_E_LEV_4("MaxELev4"),
	MAX_E_LEV_5("MaxELev5"),
	E_DMG_SYM_PER_CALC("EDmgSymPerCalc"),
	E_LEN("ELen"),
	E_LEV_LEN_1("ELevLen1"),
	E_LEV_LEN_2("ELevLen2"),
	E_LEV_LEN_3("ELevLen3"),
	HIT_CLASS("HitClass"),
	NUM_DIRECTIONS("NumDirections"),
	LOCAL_BLOOD("LocalBlood"),
	DAMAGE_RATE("DamageRate"),
	TRAVEL_SOUND("TravelSound"),
	HIT_SOUND("HitSound"),
	PROG_SOUND("ProgSound"),
	PROG_OVERLAY("ProgOverlay"),
	EXPLOSION_MISSILE("ExplosionMissile"),
	SUB_MISSILE_1("SubMissile1"),
	SUB_MISSILE_2("SubMissile2"),
	SUB_MISSILE_3("SubMissile3"),
	HIT_SUB_MISSILE_1("HitSubMissile1"),
	HIT_SUB_MISSILE_2("HitSubMissile2"),
	HIT_SUB_MISSILE_3("HitSubMissile3"),
	HIT_SUB_MISSILE_4("HitSubMissile4"),
	CLT_SUB_MISSILE_1("CltSubMissile1"),
	CLT_SUB_MISSILE_2("CltSubMissile2"),
	CLT_SUB_MISSILE_3("CltSubMissile3"),
	CLT_HIT_SUB_MISSILE_1("CltHitSubMissile1"),
	CLT_HIT_SUB_MISSILE_2("CltHitSubMissile2"),
	CLT_HIT_SUB_MISSILE_3("CltHitSubMissile3"),
	CLT_HIT_SUB_MISSILE_4("CltHitSubMissile4"),
	EOL("*eol");
	
	override val headerHistory: List<String> = listOf(header, *headerHistory)
	
	companion object {
		val FILE_PATH = "data/global/excel/missiles.txt".properSeparator()
		val HEADERS = values().map { it.headerHistory }
		val UNIQUE_HEADER = MISSILE
		const val HARDCODE = false
		
		val INFO = object: D2SheetInfo {
			override fun getFilePath() = FILE_PATH
			override fun getHeaders() = HEADERS
			override fun getUniqueHeader() = UNIQUE_HEADER
			override fun isHardcode() = HARDCODE
		}
	}
	
}