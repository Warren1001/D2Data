package io.github.warren1001.d2data.enums

enum class D2CubeMain(override val header: String): D2Header {
	
	DESCRIPTION("description"),
	ENABLED("enabled"),
	FIRST_LADDER_SEASON("firstLadderSeason"),
	LAST_LADDER_SEASON("lastLadderSeason"),
	MIN_DIFF("min diff"),
	VERSION("version"),
	OP("op"),
	PARAM("param"),
	VALUE("value"),
	CLASS("class"),
	NUMINPUTS("numinputs"),
	INPUT_1("input 1"),
	INPUT_2("input 2"),
	INPUT_3("input 3"),
	INPUT_4("input 4"),
	INPUT_5("input 5"),
	INPUT_6("input 6"),
	INPUT_7("input 7"),
	OUTPUT("output"),
	LVL("lvl"),
	PLVL("plvl"),
	ILVL("ilvl"),
	MOD_1("mod 1"),
	MOD_1_CHANCE("mod 1 chance"),
	MOD_1_PARAM("mod 1 param"),
	MOD_1_MIN("mod 1 min"),
	MOD_1_MAX("mod 1 max"),
	MOD_2("mod 2"),
	MOD_2_CHANCE("mod 2 chance"),
	MOD_2_PARAM("mod 2 param"),
	MOD_2_MIN("mod 2 min"),
	MOD_2_MAX("mod 2 max"),
	MOD_3("mod 3"),
	MOD_3_CHANCE("mod 3 chance"),
	MOD_3_PARAM("mod 3 param"),
	MOD_3_MIN("mod 3 min"),
	MOD_3_MAX("mod 3 max"),
	MOD_4("mod 4"),
	MOD_4_CHANCE("mod 4 chance"),
	MOD_4_PARAM("mod 4 param"),
	MOD_4_MIN("mod 4 min"),
	MOD_4_MAX("mod 4 max"),
	MOD_5("mod 5"),
	MOD_5_CHANCE("mod 5 chance"),
	MOD_5_PARAM("mod 5 param"),
	MOD_5_MIN("mod 5 min"),
	MOD_5_MAX("mod 5 max"),
	OUTPUT_B("output b"),
	B_LVL("b lvl"),
	B_PLVL("b plvl"),
	B_ILVL("b ilvl"),
	B_MOD_1("b mod 1"),
	B_MOD_1_CHANCE("b mod 1 chance"),
	B_MOD_1_PARAM("b mod 1 param"),
	B_MOD_1_MIN("b mod 1 min"),
	B_MOD_1_MAX("b mod 1 max"),
	B_MOD_2("b mod 2"),
	B_MOD_2_CHANCE("b mod 2 chance"),
	B_MOD_2_PARAM("b mod 2 param"),
	B_MOD_2_MIN("b mod 2 min"),
	B_MOD_2_MAX("b mod 2 max"),
	B_MOD_3("b mod 3"),
	B_MOD_3_CHANCE("b mod 3 chance"),
	B_MOD_3_PARAM("b mod 3 param"),
	B_MOD_3_MIN("b mod 3 min"),
	B_MOD_3_MAX("b mod 3 max"),
	B_MOD_4("b mod 4"),
	B_MOD_4_CHANCE("b mod 4 chance"),
	B_MOD_4_PARAM("b mod 4 param"),
	B_MOD_4_MIN("b mod 4 min"),
	B_MOD_4_MAX("b mod 4 max"),
	B_MOD_5("b mod 5"),
	B_MOD_5_CHANCE("b mod 5 chance"),
	B_MOD_5_PARAM("b mod 5 param"),
	B_MOD_5_MIN("b mod 5 min"),
	B_MOD_5_MAX("b mod 5 max"),
	OUTPUT_C("output c"),
	C_LVL("c lvl"),
	C_PLVL("c plvl"),
	C_ILVL("c ilvl"),
	C_MOD_1("c mod 1"),
	C_MOD_1_CHANCE("c mod 1 chance"),
	C_MOD_1_PARAM("c mod 1 param"),
	C_MOD_1_MIN("c mod 1 min"),
	C_MOD_1_MAX("c mod 1 max"),
	C_MOD_2("c mod 2"),
	C_MOD_2_CHANCE("c mod 2 chance"),
	C_MOD_2_PARAM("c mod 2 param"),
	C_MOD_2_MIN("c mod 2 min"),
	C_MOD_2_MAX("c mod 2 max"),
	C_MOD_3("c mod 3"),
	C_MOD_3_CHANCE("c mod 3 chance"),
	C_MOD_3_PARAM("c mod 3 param"),
	C_MOD_3_MIN("c mod 3 min"),
	C_MOD_3_MAX("c mod 3 max"),
	C_MOD_4("c mod 4"),
	C_MOD_4_CHANCE("c mod 4 chance"),
	C_MOD_4_PARAM("c mod 4 param"),
	C_MOD_4_MIN("c mod 4 min"),
	C_MOD_4_MAX("c mod 4 max"),
	C_MOD_5("c mod 5"),
	C_MOD_5_CHANCE("c mod 5 chance"),
	C_MOD_5_PARAM("c mod 5 param"),
	C_MOD_5_MIN("c mod 5 min"),
	C_MOD_5_MAX("c mod 5 max"),
	EOL("*eol");
	
	companion object {
		const val SHEET_NAME = "cubemain"
		val HEADERS = values().map { it.header }
		const val HARDCODE = false
		
		val INFO = object: D2SheetInfo {
			override fun getSheetName() = SHEET_NAME
			override fun getHeaders() = HEADERS
			override fun getUniqueHeader() = null
			override fun isHardcode() = HARDCODE
		}
	}
	
}